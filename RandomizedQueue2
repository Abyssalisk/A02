package a02;

import java.util.Iterator;
import java.util.NoSuchElementException;

import edu.princeton.cs.algs4.StdRandom;

public class RandomizedQueue<Item> implements Iterable<Item> {
	private Item[] a;
	private int n;
	
	/**
	 * construct an empty randomized queue
	 */
	public RandomizedQueue() {
		Item[] a = (Item[]) new Object[2];
		n = 0;
	}
	
	/**
	 * is the queue empty?
	 * @return
	 */
	public boolean isEmpty() {
		return n == 0; 
	}
	
	/**
	 * return the number of items on the queue
	 * @return
	 */
	public int size() {
		return n; 
	}
	
	/**
	 * add the item
	 * @param item
	 */
	public void enqueue(Item item) {
		 if (a == null) {
			 throw new NullPointerException();
		 }
		 if(isStorageFull()) {
			 doubleSize();
		 }
		 
		 a[n++] = item;
	}
	
	/**
	 * delete and return a random item
	 * @return
	 */
	public Item dequeue() {
		if (n == 0) {
			throw new NoSuchElementException();
		}
		
		int random = StdRandom.uniform(n);
		Item returnItem = a[random];
		n--;
		
		a[random] = a[n];
		a[n] = null;
		
		if(isStorageOversized()) {
			halveSize();
		}
		
		return returnItem;
	}
	
	/**
	 * return (but do not delete) a random item
	 * @return
	 */
	public Item sample() {
		if (n == 0) {
			throw new NoSuchElementException();
		}
		
		int random = StdRandom.uniform(n);
		return a[random]; 
	}
	
	private boolean isStorageFull() {
		return a.length == n;
	}
	
	private void doubleSize() {
		resize(a.length * 2);
	}
	
	private boolean isStorageOversized() {
		return a.length > 2 && n <= a.length / 4;
	}
	
	private void halveSize() {
		resize(a.length / 2);
	}
	
	private void resize(int newSize) {
		Item[] newStorage = (Item[]) new Object[newSize];
		for (int i = 0; i < n; i++) {
			newStorage[i] = a[i];
		}
		a = newStorage;
	}
	
	/* 
	 * return an independent iterator over items in random order
	 */
	public Iterator<Item> iterator() {
		 return new RandomizedQueueIterator();
	}
	
	private class RandomizedQueueIterator implements Iterator<Item> {

		@Override
		public boolean hasNext() {
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		public Item next() {
			// TODO Auto-generated method stub
			return null;
		}
		
	}
	
	public static void main(String[] args) {
		// unit testing
	}
}
